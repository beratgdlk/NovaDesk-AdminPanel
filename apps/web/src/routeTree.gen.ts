/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as ChatsIndexRouteImport } from './routes/chats/index'
import { Route as ChatsBotRouteImport } from './routes/chats/bot'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authOtpRouteImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedSettingsRouteRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedadminRouteRouteImport } from './routes/_authenticated/(admin)/route'
import { Route as AuthenticatedAgentIdRouteRouteImport } from './routes/_authenticated/$agentId/route'
import { Route as AuthenticatedSettingsIndexRouteImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedadminIndexRouteImport } from './routes/_authenticated/(admin)/index'
import { Route as AuthenticatedAgentIdIndexRouteImport } from './routes/_authenticated/$agentId/index'
import { Route as AuthenticatedSettingsNotificationsRouteImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsDisplayRouteImport } from './routes/_authenticated/settings/display'
import { Route as AuthenticatedSettingsAppearanceRouteImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedSettingsAccountRouteImport } from './routes/_authenticated/settings/account'
import { Route as AuthenticatedAgentIdWhatsappRouteImport } from './routes/_authenticated/$agentId/whatsapp'
import { Route as AuthenticatedAgentIdAgentManagementRouteImport } from './routes/_authenticated/$agentId/agent-management'
import { Route as AuthenticatedadminUsersIndexRouteImport } from './routes/_authenticated/(admin)/users/index'
import { Route as AuthenticatedadminRolesIndexRouteImport } from './routes/_authenticated/(admin)/roles/index'
import { Route as AuthenticatedadminDomainsIndexRouteImport } from './routes/_authenticated/(admin)/domains/index'
import { Route as AuthenticatedadminAgentsIndexRouteImport } from './routes/_authenticated/(admin)/agents/index'
import { Route as AuthenticatedAgentIdConversationsIndexRouteImport } from './routes/_authenticated/$agentId/conversations/index'
import { Route as AuthenticatedAgentIdChatbotIndexRouteImport } from './routes/_authenticated/$agentId/chatbot/index'
import { Route as AuthenticatedAgentIdConversationsIdRouteImport } from './routes/_authenticated/$agentId/conversations/$id'
import { Route as AuthenticatedAgentIdChatbotIntegrationRouteImport } from './routes/_authenticated/$agentId/chatbot/integration'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatsIndexRoute = ChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatsBotRoute = ChatsBotRouteImport.update({
  id: '/chats/bot',
  path: '/chats/bot',
  getParentRoute: () => rootRouteImport,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => authRouteRoute,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => authRouteRoute,
} as any)
const authOtpRoute = authOtpRouteImport.update({
  id: '/otp',
  path: '/otp',
  getParentRoute: () => authRouteRoute,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => authRouteRoute,
} as any)
const AuthenticatedSettingsRouteRoute =
  AuthenticatedSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedadminRouteRoute = AuthenticatedadminRouteRouteImport.update({
  id: '/(admin)',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAgentIdRouteRoute =
  AuthenticatedAgentIdRouteRouteImport.update({
    id: '/$agentId',
    path: '/$agentId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsIndexRoute =
  AuthenticatedSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedadminIndexRoute = AuthenticatedadminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedadminRouteRoute,
} as any)
const AuthenticatedAgentIdIndexRoute =
  AuthenticatedAgentIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedAgentIdRouteRoute,
  } as any)
const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsDisplayRoute =
  AuthenticatedSettingsDisplayRouteImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedAgentIdWhatsappRoute =
  AuthenticatedAgentIdWhatsappRouteImport.update({
    id: '/whatsapp',
    path: '/whatsapp',
    getParentRoute: () => AuthenticatedAgentIdRouteRoute,
  } as any)
const AuthenticatedAgentIdAgentManagementRoute =
  AuthenticatedAgentIdAgentManagementRouteImport.update({
    id: '/agent-management',
    path: '/agent-management',
    getParentRoute: () => AuthenticatedAgentIdRouteRoute,
  } as any)
const AuthenticatedadminUsersIndexRoute =
  AuthenticatedadminUsersIndexRouteImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => AuthenticatedadminRouteRoute,
  } as any)
const AuthenticatedadminRolesIndexRoute =
  AuthenticatedadminRolesIndexRouteImport.update({
    id: '/roles/',
    path: '/roles/',
    getParentRoute: () => AuthenticatedadminRouteRoute,
  } as any)
const AuthenticatedadminDomainsIndexRoute =
  AuthenticatedadminDomainsIndexRouteImport.update({
    id: '/domains/',
    path: '/domains/',
    getParentRoute: () => AuthenticatedadminRouteRoute,
  } as any)
const AuthenticatedadminAgentsIndexRoute =
  AuthenticatedadminAgentsIndexRouteImport.update({
    id: '/agents/',
    path: '/agents/',
    getParentRoute: () => AuthenticatedadminRouteRoute,
  } as any)
const AuthenticatedAgentIdConversationsIndexRoute =
  AuthenticatedAgentIdConversationsIndexRouteImport.update({
    id: '/conversations/',
    path: '/conversations/',
    getParentRoute: () => AuthenticatedAgentIdRouteRoute,
  } as any)
const AuthenticatedAgentIdChatbotIndexRoute =
  AuthenticatedAgentIdChatbotIndexRouteImport.update({
    id: '/chatbot/',
    path: '/chatbot/',
    getParentRoute: () => AuthenticatedAgentIdRouteRoute,
  } as any)
const AuthenticatedAgentIdConversationsIdRoute =
  AuthenticatedAgentIdConversationsIdRouteImport.update({
    id: '/conversations/$id',
    path: '/conversations/$id',
    getParentRoute: () => AuthenticatedAgentIdRouteRoute,
  } as any)
const AuthenticatedAgentIdChatbotIntegrationRoute =
  AuthenticatedAgentIdChatbotIntegrationRouteImport.update({
    id: '/chatbot/integration',
    path: '/chatbot/integration',
    getParentRoute: () => AuthenticatedAgentIdRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof AuthenticatedadminIndexRoute
  '/$agentId': typeof AuthenticatedAgentIdRouteRouteWithChildren
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/chats/bot': typeof ChatsBotRoute
  '/chats': typeof ChatsIndexRoute
  '/$agentId/agent-management': typeof AuthenticatedAgentIdAgentManagementRoute
  '/$agentId/whatsapp': typeof AuthenticatedAgentIdWhatsappRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/$agentId/': typeof AuthenticatedAgentIdIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/$agentId/chatbot/integration': typeof AuthenticatedAgentIdChatbotIntegrationRoute
  '/$agentId/conversations/$id': typeof AuthenticatedAgentIdConversationsIdRoute
  '/$agentId/chatbot': typeof AuthenticatedAgentIdChatbotIndexRoute
  '/$agentId/conversations': typeof AuthenticatedAgentIdConversationsIndexRoute
  '/agents': typeof AuthenticatedadminAgentsIndexRoute
  '/domains': typeof AuthenticatedadminDomainsIndexRoute
  '/roles': typeof AuthenticatedadminRolesIndexRoute
  '/users': typeof AuthenticatedadminUsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof AuthenticatedadminIndexRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/chats/bot': typeof ChatsBotRoute
  '/chats': typeof ChatsIndexRoute
  '/$agentId/agent-management': typeof AuthenticatedAgentIdAgentManagementRoute
  '/$agentId/whatsapp': typeof AuthenticatedAgentIdWhatsappRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/$agentId': typeof AuthenticatedAgentIdIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/$agentId/chatbot/integration': typeof AuthenticatedAgentIdChatbotIntegrationRoute
  '/$agentId/conversations/$id': typeof AuthenticatedAgentIdConversationsIdRoute
  '/$agentId/chatbot': typeof AuthenticatedAgentIdChatbotIndexRoute
  '/$agentId/conversations': typeof AuthenticatedAgentIdConversationsIndexRoute
  '/agents': typeof AuthenticatedadminAgentsIndexRoute
  '/domains': typeof AuthenticatedadminDomainsIndexRoute
  '/roles': typeof AuthenticatedadminRolesIndexRoute
  '/users': typeof AuthenticatedadminUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(auth)': typeof authRouteRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/$agentId': typeof AuthenticatedAgentIdRouteRouteWithChildren
  '/_authenticated/(admin)': typeof AuthenticatedadminRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/chats/bot': typeof ChatsBotRoute
  '/chats/': typeof ChatsIndexRoute
  '/_authenticated/$agentId/agent-management': typeof AuthenticatedAgentIdAgentManagementRoute
  '/_authenticated/$agentId/whatsapp': typeof AuthenticatedAgentIdWhatsappRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/_authenticated/$agentId/': typeof AuthenticatedAgentIdIndexRoute
  '/_authenticated/(admin)/': typeof AuthenticatedadminIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/$agentId/chatbot/integration': typeof AuthenticatedAgentIdChatbotIntegrationRoute
  '/_authenticated/$agentId/conversations/$id': typeof AuthenticatedAgentIdConversationsIdRoute
  '/_authenticated/$agentId/chatbot/': typeof AuthenticatedAgentIdChatbotIndexRoute
  '/_authenticated/$agentId/conversations/': typeof AuthenticatedAgentIdConversationsIndexRoute
  '/_authenticated/(admin)/agents/': typeof AuthenticatedadminAgentsIndexRoute
  '/_authenticated/(admin)/domains/': typeof AuthenticatedadminDomainsIndexRoute
  '/_authenticated/(admin)/roles/': typeof AuthenticatedadminRolesIndexRoute
  '/_authenticated/(admin)/users/': typeof AuthenticatedadminUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$agentId'
    | '/settings'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/chats/bot'
    | '/chats'
    | '/$agentId/agent-management'
    | '/$agentId/whatsapp'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/$agentId/'
    | '/settings/'
    | '/$agentId/chatbot/integration'
    | '/$agentId/conversations/$id'
    | '/$agentId/chatbot'
    | '/$agentId/conversations'
    | '/agents'
    | '/domains'
    | '/roles'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/chats/bot'
    | '/chats'
    | '/$agentId/agent-management'
    | '/$agentId/whatsapp'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/$agentId'
    | '/settings'
    | '/$agentId/chatbot/integration'
    | '/$agentId/conversations/$id'
    | '/$agentId/chatbot'
    | '/$agentId/conversations'
    | '/agents'
    | '/domains'
    | '/roles'
    | '/users'
  id:
    | '__root__'
    | '/(auth)'
    | '/_authenticated'
    | '/_authenticated/$agentId'
    | '/_authenticated/(admin)'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/chats/bot'
    | '/chats/'
    | '/_authenticated/$agentId/agent-management'
    | '/_authenticated/$agentId/whatsapp'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/$agentId/'
    | '/_authenticated/(admin)/'
    | '/_authenticated/settings/'
    | '/_authenticated/$agentId/chatbot/integration'
    | '/_authenticated/$agentId/conversations/$id'
    | '/_authenticated/$agentId/chatbot/'
    | '/_authenticated/$agentId/conversations/'
    | '/_authenticated/(admin)/agents/'
    | '/_authenticated/(admin)/domains/'
    | '/_authenticated/(admin)/roles/'
    | '/_authenticated/(admin)/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  authRouteRoute: typeof authRouteRouteWithChildren
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
  ChatsBotRoute: typeof ChatsBotRoute
  ChatsIndexRoute: typeof ChatsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chats/': {
      id: '/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof ChatsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chats/bot': {
      id: '/chats/bot'
      path: '/chats/bot'
      fullPath: '/chats/bot'
      preLoaderRoute: typeof ChatsBotRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/(admin)': {
      id: '/_authenticated/(admin)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedadminRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/$agentId': {
      id: '/_authenticated/$agentId'
      path: '/$agentId'
      fullPath: '/$agentId'
      preLoaderRoute: typeof AuthenticatedAgentIdRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/(admin)/': {
      id: '/_authenticated/(admin)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedadminIndexRouteImport
      parentRoute: typeof AuthenticatedadminRouteRoute
    }
    '/_authenticated/$agentId/': {
      id: '/_authenticated/$agentId/'
      path: '/'
      fullPath: '/$agentId/'
      preLoaderRoute: typeof AuthenticatedAgentIdIndexRouteImport
      parentRoute: typeof AuthenticatedAgentIdRouteRoute
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/$agentId/whatsapp': {
      id: '/_authenticated/$agentId/whatsapp'
      path: '/whatsapp'
      fullPath: '/$agentId/whatsapp'
      preLoaderRoute: typeof AuthenticatedAgentIdWhatsappRouteImport
      parentRoute: typeof AuthenticatedAgentIdRouteRoute
    }
    '/_authenticated/$agentId/agent-management': {
      id: '/_authenticated/$agentId/agent-management'
      path: '/agent-management'
      fullPath: '/$agentId/agent-management'
      preLoaderRoute: typeof AuthenticatedAgentIdAgentManagementRouteImport
      parentRoute: typeof AuthenticatedAgentIdRouteRoute
    }
    '/_authenticated/(admin)/users/': {
      id: '/_authenticated/(admin)/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedadminUsersIndexRouteImport
      parentRoute: typeof AuthenticatedadminRouteRoute
    }
    '/_authenticated/(admin)/roles/': {
      id: '/_authenticated/(admin)/roles/'
      path: '/roles'
      fullPath: '/roles'
      preLoaderRoute: typeof AuthenticatedadminRolesIndexRouteImport
      parentRoute: typeof AuthenticatedadminRouteRoute
    }
    '/_authenticated/(admin)/domains/': {
      id: '/_authenticated/(admin)/domains/'
      path: '/domains'
      fullPath: '/domains'
      preLoaderRoute: typeof AuthenticatedadminDomainsIndexRouteImport
      parentRoute: typeof AuthenticatedadminRouteRoute
    }
    '/_authenticated/(admin)/agents/': {
      id: '/_authenticated/(admin)/agents/'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof AuthenticatedadminAgentsIndexRouteImport
      parentRoute: typeof AuthenticatedadminRouteRoute
    }
    '/_authenticated/$agentId/conversations/': {
      id: '/_authenticated/$agentId/conversations/'
      path: '/conversations'
      fullPath: '/$agentId/conversations'
      preLoaderRoute: typeof AuthenticatedAgentIdConversationsIndexRouteImport
      parentRoute: typeof AuthenticatedAgentIdRouteRoute
    }
    '/_authenticated/$agentId/chatbot/': {
      id: '/_authenticated/$agentId/chatbot/'
      path: '/chatbot'
      fullPath: '/$agentId/chatbot'
      preLoaderRoute: typeof AuthenticatedAgentIdChatbotIndexRouteImport
      parentRoute: typeof AuthenticatedAgentIdRouteRoute
    }
    '/_authenticated/$agentId/conversations/$id': {
      id: '/_authenticated/$agentId/conversations/$id'
      path: '/conversations/$id'
      fullPath: '/$agentId/conversations/$id'
      preLoaderRoute: typeof AuthenticatedAgentIdConversationsIdRouteImport
      parentRoute: typeof AuthenticatedAgentIdRouteRoute
    }
    '/_authenticated/$agentId/chatbot/integration': {
      id: '/_authenticated/$agentId/chatbot/integration'
      path: '/chatbot/integration'
      fullPath: '/$agentId/chatbot/integration'
      preLoaderRoute: typeof AuthenticatedAgentIdChatbotIntegrationRouteImport
      parentRoute: typeof AuthenticatedAgentIdRouteRoute
    }
  }
}

interface authRouteRouteChildren {
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface AuthenticatedAgentIdRouteRouteChildren {
  AuthenticatedAgentIdAgentManagementRoute: typeof AuthenticatedAgentIdAgentManagementRoute
  AuthenticatedAgentIdWhatsappRoute: typeof AuthenticatedAgentIdWhatsappRoute
  AuthenticatedAgentIdIndexRoute: typeof AuthenticatedAgentIdIndexRoute
  AuthenticatedAgentIdChatbotIntegrationRoute: typeof AuthenticatedAgentIdChatbotIntegrationRoute
  AuthenticatedAgentIdConversationsIdRoute: typeof AuthenticatedAgentIdConversationsIdRoute
  AuthenticatedAgentIdChatbotIndexRoute: typeof AuthenticatedAgentIdChatbotIndexRoute
  AuthenticatedAgentIdConversationsIndexRoute: typeof AuthenticatedAgentIdConversationsIndexRoute
}

const AuthenticatedAgentIdRouteRouteChildren: AuthenticatedAgentIdRouteRouteChildren =
  {
    AuthenticatedAgentIdAgentManagementRoute:
      AuthenticatedAgentIdAgentManagementRoute,
    AuthenticatedAgentIdWhatsappRoute: AuthenticatedAgentIdWhatsappRoute,
    AuthenticatedAgentIdIndexRoute: AuthenticatedAgentIdIndexRoute,
    AuthenticatedAgentIdChatbotIntegrationRoute:
      AuthenticatedAgentIdChatbotIntegrationRoute,
    AuthenticatedAgentIdConversationsIdRoute:
      AuthenticatedAgentIdConversationsIdRoute,
    AuthenticatedAgentIdChatbotIndexRoute:
      AuthenticatedAgentIdChatbotIndexRoute,
    AuthenticatedAgentIdConversationsIndexRoute:
      AuthenticatedAgentIdConversationsIndexRoute,
  }

const AuthenticatedAgentIdRouteRouteWithChildren =
  AuthenticatedAgentIdRouteRoute._addFileChildren(
    AuthenticatedAgentIdRouteRouteChildren,
  )

interface AuthenticatedadminRouteRouteChildren {
  AuthenticatedadminIndexRoute: typeof AuthenticatedadminIndexRoute
  AuthenticatedadminAgentsIndexRoute: typeof AuthenticatedadminAgentsIndexRoute
  AuthenticatedadminDomainsIndexRoute: typeof AuthenticatedadminDomainsIndexRoute
  AuthenticatedadminRolesIndexRoute: typeof AuthenticatedadminRolesIndexRoute
  AuthenticatedadminUsersIndexRoute: typeof AuthenticatedadminUsersIndexRoute
}

const AuthenticatedadminRouteRouteChildren: AuthenticatedadminRouteRouteChildren =
  {
    AuthenticatedadminIndexRoute: AuthenticatedadminIndexRoute,
    AuthenticatedadminAgentsIndexRoute: AuthenticatedadminAgentsIndexRoute,
    AuthenticatedadminDomainsIndexRoute: AuthenticatedadminDomainsIndexRoute,
    AuthenticatedadminRolesIndexRoute: AuthenticatedadminRolesIndexRoute,
    AuthenticatedadminUsersIndexRoute: AuthenticatedadminUsersIndexRoute,
  }

const AuthenticatedadminRouteRouteWithChildren =
  AuthenticatedadminRouteRoute._addFileChildren(
    AuthenticatedadminRouteRouteChildren,
  )

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsDisplayRoute: typeof AuthenticatedSettingsDisplayRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsDisplayRoute: AuthenticatedSettingsDisplayRoute,
    AuthenticatedSettingsNotificationsRoute:
      AuthenticatedSettingsNotificationsRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedAgentIdRouteRoute: typeof AuthenticatedAgentIdRouteRouteWithChildren
  AuthenticatedadminRouteRoute: typeof AuthenticatedadminRouteRouteWithChildren
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedAgentIdRouteRoute: AuthenticatedAgentIdRouteRouteWithChildren,
  AuthenticatedadminRouteRoute: AuthenticatedadminRouteRouteWithChildren,
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  authRouteRoute: authRouteRouteWithChildren,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
  ChatsBotRoute: ChatsBotRoute,
  ChatsIndexRoute: ChatsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
